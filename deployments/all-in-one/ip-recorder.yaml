---
# Source: ip-recorder/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ip-recorder
  labels:
    helm.sh/chart: ip-recorder-v0.0.1
    app.kubernetes.io/name: ip-recorder
    app.kubernetes.io/instance: ip-recorder
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
---
# Source: ip-recorder/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ip-recorder
  labels:
    helm.sh/chart: ip-recorder-v0.0.1
    app.kubernetes.io/name: ip-recorder
    app.kubernetes.io/instance: ip-recorder
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: ip-recorder
    app.kubernetes.io/instance: ip-recorder
---
# Source: ip-recorder/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ip-recorder
  labels:
    helm.sh/chart: ip-recorder-v0.0.1
    app.kubernetes.io/name: ip-recorder
    app.kubernetes.io/instance: ip-recorder
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: ip-recorder
      app.kubernetes.io/instance: ip-recorder
  template:
    metadata:
      labels:
        app.kubernetes.io/name: ip-recorder
        app.kubernetes.io/instance: ip-recorder
    spec:
      serviceAccountName: ip-recorder
      securityContext:
        {}
      containers:
        - name: ip-recorder
          securityContext:
            {}
          image: "docker.io/usamaahmadkhan/ip-recorder:v0.0.1"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          env:
            - name: PORT
              value: 8080
            
            - name: DB_HOST
              value: mysql.rds.com
            - name: DB_PORT
              value: "3306"
            - name: DB_USER
              value: user
            - name: DB_PASSWORD
              valueFrom:
                secretRef:
                  key: password
                  name: db-password
            - name: DB_NAME
              value: ips
          resources:
            {}
---
# Source: ip-recorder/templates/tests/test-connection.yaml
apiVersion: v1
kind: Pod
metadata:
  name: "ip-recorder-test-connection"
  labels:
    helm.sh/chart: ip-recorder-v0.0.1
    app.kubernetes.io/name: ip-recorder
    app.kubernetes.io/instance: ip-recorder
    app.kubernetes.io/version: "v0.0.1"
    app.kubernetes.io/managed-by: Helm
  annotations:
    "helm.sh/hook": test
spec:
  containers:
    - name: wget
      image: busybox
      command: ['wget']
      args: ['ip-recorder:80']
  restartPolicy: Never
